version: '3.5'

networks:
  default_net:

services:
  db:
    container_name: psqldb
    image: postgres:9.6-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=test
      - POSTGRES_USER=root
      - POSTGRES_DB=benefits
      - POSTGRES_HOST=psqldb
      - PG_TRUST_LOCALNET=true
    networks:
      default_net:

  auths_domain:
    container_name: auths_domain
    image: auths_domain:latest
    restart: always
    build:
      context: ./auths_domain/
      dockerfile: Dockerfile
      args:
        ENVIRON: prod
    ports:
      - "5000:5000"
    volumes:
      - ./auths_domain/:/app/
    depends_on:
      - db
    command: gunicorn -c gunicorn_config wsgi --access-logfile -
    environment:
      - POSTGRES_PASSWORD=test
      - POSTGRES_USER=root
      - POSTGRES_DB=benefits
      - POSTGRES_HOST=psqldb
      - PG_TRUST_LOCALNET=true
      - ENVIRON=prod
    networks:
      default_net:

  front:
    container_name: front
    image: front:latest
    restart: always
    build:
      context: ./front/
      dockerfile: Dockerfile
      args:
        ENVIRON: prod
    command: ["gunicorn", "wsgi:application", "-w", "2", "-b", "0.0.0.0:8000", "--capture-output", "--access-logfile", "-", "-t", "600"]
    networks:
        - default_net
    environment:
        - RUN_MODE=local

  front_nginx:
    container_name: front_nginx
    image: front_nginx:latest
    build:
      context: ./front/
      dockerfile: Dockerfile.nginx
    networks:
      default_net:
        aliases:
          - benefits.adamski.local
    environment:
      - WEB=front
      - BASIC_AUTH=off
    volumes:
      - front-media-volume:/web/media/
    ports:
      - "13021:80"
    depends_on:
      - "front"

volumes:
  front-media-volume:
    external: true
